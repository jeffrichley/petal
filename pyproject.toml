[project]
name = "petal"
version = "0.1.0"
description = "Agent and tool creation framework"
authors = [
  { name = "Jeff Richley", email = "jeffrichley@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ai", "agents", "framework", "petal", "chrona"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed"
]
dependencies = [
    "pre-commit>=4.2.0",
    "setuptools>=80.9.0",
]

[project.optional-dependencies]
dev = [
  "black>=24.3.0",
  "ruff>=0.4.0",
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "mypy>=1.7",
  "pre-commit>=3.6",
  "mkdocs-material>=9.5",
  "pip-audit>=2.6",
  "ipython>=8.10",
  "types-requests"
]

docs = [
  "mkdocs-material",
  "mkdocstrings[python]>=0.24.0"
]

test = [
  "pytest",
  "pytest-cov",
  "hypothesis"
]

typecheck = [
  "mypy",
  "types-requests"
]

security = [
  "pip-audit"
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ["py311"]
skip-magic-trailing-comma = false

[tool.ruff]
line-length = 88
target-version = "py311"
extend-select = [
  "E", "F", "I", "N", "B", "Q", "SIM", "C90", "ARG"
]
ignore = [
  "E501",  # Line too long (we use Black's wrapping)
  "B008"   # Don't call function with mutable default
]

[tool.mypy]
python_version = "3.11"
strict = true
show_error_codes = true
warn_unused_configs = true
